/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as AuthenticationLayoutImport } from './routes/authentication/_layout'

// Create Virtual Routes

const AuthenticationImport = createFileRoute('/authentication')()
const LayoutIndexLazyImport = createFileRoute('/_layout/')()
const LayoutProfileLazyImport = createFileRoute('/_layout/profile')()
const LayoutProductLazyImport = createFileRoute('/_layout/product')()
const LayoutLogoutLazyImport = createFileRoute('/_layout/logout')()
const LayoutCategoryLazyImport = createFileRoute('/_layout/category')()
const AuthenticationLayoutLoginLazyImport = createFileRoute(
  '/authentication/_layout/login',
)()

// Create/Update Routes

const AuthenticationRoute = AuthenticationImport.update({
  path: '/authentication',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexLazyRoute = LayoutIndexLazyImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() => import('./routes/_layout/index.lazy').then((d) => d.Route))

const LayoutProfileLazyRoute = LayoutProfileLazyImport.update({
  path: '/profile',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/profile.lazy').then((d) => d.Route),
)

const LayoutProductLazyRoute = LayoutProductLazyImport.update({
  path: '/product',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/product.lazy').then((d) => d.Route),
)

const LayoutLogoutLazyRoute = LayoutLogoutLazyImport.update({
  path: '/logout',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/logout.lazy').then((d) => d.Route),
)

const LayoutCategoryLazyRoute = LayoutCategoryLazyImport.update({
  path: '/category',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/category.lazy').then((d) => d.Route),
)

const AuthenticationLayoutRoute = AuthenticationLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AuthenticationRoute,
} as any)

const AuthenticationLayoutLoginLazyRoute =
  AuthenticationLayoutLoginLazyImport.update({
    path: '/login',
    getParentRoute: () => AuthenticationLayoutRoute,
  } as any).lazy(() =>
    import('./routes/authentication/_layout/login.lazy').then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/authentication': {
      id: '/authentication'
      path: '/authentication'
      fullPath: '/authentication'
      preLoaderRoute: typeof AuthenticationImport
      parentRoute: typeof rootRoute
    }
    '/authentication/_layout': {
      id: '/authentication/_layout'
      path: '/authentication'
      fullPath: '/authentication'
      preLoaderRoute: typeof AuthenticationLayoutImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_layout/category': {
      id: '/_layout/category'
      path: '/category'
      fullPath: '/category'
      preLoaderRoute: typeof LayoutCategoryLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/logout': {
      id: '/_layout/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LayoutLogoutLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/product': {
      id: '/_layout/product'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof LayoutProductLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/profile': {
      id: '/_layout/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof LayoutProfileLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexLazyImport
      parentRoute: typeof LayoutImport
    }
    '/authentication/_layout/login': {
      id: '/authentication/_layout/login'
      path: '/login'
      fullPath: '/authentication/login'
      preLoaderRoute: typeof AuthenticationLayoutLoginLazyImport
      parentRoute: typeof AuthenticationLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  LayoutRoute: LayoutRoute.addChildren({
    LayoutCategoryLazyRoute,
    LayoutLogoutLazyRoute,
    LayoutProductLazyRoute,
    LayoutProfileLazyRoute,
    LayoutIndexLazyRoute,
  }),
  AuthenticationRoute: AuthenticationRoute.addChildren({
    AuthenticationLayoutRoute: AuthenticationLayoutRoute.addChildren({
      AuthenticationLayoutLoginLazyRoute,
    }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/authentication"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/category",
        "/_layout/logout",
        "/_layout/product",
        "/_layout/profile",
        "/_layout/"
      ]
    },
    "/authentication": {
      "filePath": "authentication",
      "children": [
        "/authentication/_layout"
      ]
    },
    "/authentication/_layout": {
      "filePath": "authentication/_layout.tsx",
      "parent": "/authentication",
      "children": [
        "/authentication/_layout/login"
      ]
    },
    "/_layout/category": {
      "filePath": "_layout/category.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/logout": {
      "filePath": "_layout/logout.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/product": {
      "filePath": "_layout/product.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/profile": {
      "filePath": "_layout/profile.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout/index.lazy.tsx",
      "parent": "/_layout"
    },
    "/authentication/_layout/login": {
      "filePath": "authentication/_layout/login.lazy.tsx",
      "parent": "/authentication/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
