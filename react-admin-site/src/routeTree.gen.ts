/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticationLayoutImport } from './routes/authentication/_layout'

// Create Virtual Routes

const AuthenticationImport = createFileRoute('/authentication')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const AuthenticationLayoutLoginLazyImport = createFileRoute(
  '/authentication/_layout/login',
)()

// Create/Update Routes

const AuthenticationRoute = AuthenticationImport.update({
  path: '/authentication',
  getParentRoute: () => rootRoute,
} as any)

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthenticationLayoutRoute = AuthenticationLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AuthenticationRoute,
} as any)

const AuthenticationLayoutLoginLazyRoute =
  AuthenticationLayoutLoginLazyImport.update({
    path: '/login',
    getParentRoute: () => AuthenticationLayoutRoute,
  } as any).lazy(() =>
    import('./routes/authentication/_layout/login.lazy').then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/authentication': {
      id: '/authentication'
      path: '/authentication'
      fullPath: '/authentication'
      preLoaderRoute: typeof AuthenticationImport
      parentRoute: typeof rootRoute
    }
    '/authentication/_layout': {
      id: '/authentication/_layout'
      path: '/authentication'
      fullPath: '/authentication'
      preLoaderRoute: typeof AuthenticationLayoutImport
      parentRoute: typeof AuthenticationRoute
    }
    '/authentication/_layout/login': {
      id: '/authentication/_layout/login'
      path: '/login'
      fullPath: '/authentication/login'
      preLoaderRoute: typeof AuthenticationLayoutLoginLazyImport
      parentRoute: typeof AuthenticationLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AboutLazyRoute,
  AuthenticationRoute: AuthenticationRoute.addChildren({
    AuthenticationLayoutRoute: AuthenticationLayoutRoute.addChildren({
      AuthenticationLayoutLoginLazyRoute,
    }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/authentication"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/authentication": {
      "filePath": "authentication",
      "children": [
        "/authentication/_layout"
      ]
    },
    "/authentication/_layout": {
      "filePath": "authentication/_layout.tsx",
      "parent": "/authentication",
      "children": [
        "/authentication/_layout/login"
      ]
    },
    "/authentication/_layout/login": {
      "filePath": "authentication/_layout/login.lazy.tsx",
      "parent": "/authentication/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
