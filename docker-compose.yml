# version: "3.9" # Optional since version v1.27.0. Check out the current version with 'docker compose version'
networks:
  kong:
    driver: bridge
    name: kong-network

############################################
# Kong: The API Gateway
############################################
services:
  kong:
    container_name: kong-gateway
    image: kong
    restart: unless-stopped
    networks:
      - kong
    environment:
      KONG_DATABASE: "off"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_LOG_LEVEL: warn
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 1m30s
      timeout: 10s
      retries: 3
    volumes:
      - ./compose/kong/logs:/usr/local/kong/logs
      - ./compose/kong/logs/log.txt:/usr/local/kong/logs/log.txt
      - ./compose/kong/declarative:/usr/local/kong/declarative
      - ./compose/kong/config/nginx.conf:/usr/local/kong/nginx.conf
      - ./compose/kong/config/nginx-kong.conf:/usr/local/kong/nginx-kong.conf
    ports:
      - "8001:8001"
      - "8444:8444"
      - "8000:8000"
      - "8443:8443"
      - "9080:9080"
      - "9081:9081"
#####################################
# PostgreSQL
#####################################
  db:
    container_name: postgredb
    image: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    healthcheck:
      test: ["CMD", "/usr/bin/pg_isready", "-q", "-d", "UserDB", "-U", "$POSTGRES_USER"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - kong
    ports:
      - 5432:5432
#####################################
# Services
#####################################
  user-services:
    container_name: user-services
    image: kong-micro/user-services
    depends_on:
      db:
        condition: service_healthy
    build:
      context: user-services
      args:
        - NODE_IMAGE_ARG=$USER_NODE_IMAGE
      dockerfile: docker/Dockerfile
    environment:
      - PORT=$USER_SERVICES_PORT
      - SERVER_HOSTNAME=$USER_SERVICES_HOSTNAME
      - DATABASE_URL=$DATABASE_USERDB_URL
      - JWT_SECRET=$JWT_SECRET
    volumes:
      - ./user-services/src:/home/node/app/src
      - ./user-services/prisma:/home/node/app/prisma
    networks:
      - kong
    ports:
      # - "8080:8080"
      - "5555:5555"
  product-services:
    container_name: product-services
    image: kong-micro/product-services
    depends_on:
      db:
        condition: service_healthy
    build:
      context: product-services
      dockerfile: docker/Dockerfile
    environment:
      - PORT=$PRODUCT_SERVICES_PORT
      - SERVER_HOSTNAME=$PRODUCT_SERVICES_HOSTNAME
      - DATABASE_URL=$DATABASE_PRODUCTDB_URL
      - JWT_SECRET=$JWT_SECRET
      - IMGBB_KEY=$IMGBB_KEY
    volumes:
      - ./product-services/src:/home/node/app/src
      - ./product-services/prisma:/home/node/app/prisma
    networks:
      - kong
    ports:
      # - "8081:8080"
      - "5556:5555"
volumes:
  pgdata: